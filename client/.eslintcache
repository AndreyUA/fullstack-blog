[{"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\index.js":"1","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\App.js":"2","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Registration\\Registration.js":"5","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Navbar\\Navbar.js":"6","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\UI\\Input\\Input.js":"7","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Login\\Login.js":"8","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Landing\\Landing.js":"9","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Dashboard\\Dashboard.js":"10","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Posts\\Posts.js":"11","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\index.js":"12","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\index.js":"13","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\auth.js":"14","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\actions\\types.js":"15","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\actions\\auth.js":"17","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\profile.js":"18","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\routing\\PrivateRoute.js":"19","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\posts.js":"20","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\actions\\posts.js":"21","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Posts\\PostsItem.js":"22","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Posts\\AddPostForm.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":1380,"mtime":1609341001498,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":222,"mtime":1609253145422,"results":"28","hashOfConfig":"25"},{"size":3102,"mtime":1609257171596,"results":"29","hashOfConfig":"25"},{"size":1645,"mtime":1609340631694,"results":"30","hashOfConfig":"25"},{"size":668,"mtime":1609614736985,"results":"31","hashOfConfig":"25"},{"size":2063,"mtime":1609256869585,"results":"32","hashOfConfig":"25"},{"size":185,"mtime":1609176408065,"results":"33","hashOfConfig":"25"},{"size":198,"mtime":1609237383355,"results":"34","hashOfConfig":"25"},{"size":955,"mtime":1609613516679,"results":"35","hashOfConfig":"25"},{"size":405,"mtime":1609317024276,"results":"36","hashOfConfig":"25"},{"size":197,"mtime":1609318229038,"results":"37","hashOfConfig":"25"},{"size":1026,"mtime":1609255524627,"results":"38","hashOfConfig":"25"},{"size":514,"mtime":1609318163564,"results":"39","hashOfConfig":"25"},{"size":253,"mtime":1609239043297,"results":"40","hashOfConfig":"25"},{"size":1342,"mtime":1609341613126,"results":"41","hashOfConfig":"25"},{"size":579,"mtime":1609255342959,"results":"42","hashOfConfig":"25"},{"size":622,"mtime":1609341436184,"results":"43","hashOfConfig":"25"},{"size":547,"mtime":1609318206769,"results":"44","hashOfConfig":"25"},{"size":831,"mtime":1609617196403,"results":"45","hashOfConfig":"25"},{"size":1385,"mtime":1609613335907,"results":"46","hashOfConfig":"25"},{"size":1231,"mtime":1609617140536,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1or14rp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\index.js",[],["102","103"],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\App.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Registration\\Registration.js",["104"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Registration.css\";\r\nimport Input from \"../UI/Input/Input\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Registration = ({ isAuth }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    // надо добавить тут валидацию форм\r\n    // валидация пароля1 и пароля2\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const body = JSON.stringify({ name, email, password });\r\n\r\n      const response = await axios.post(\"/api/register\", body, config);\r\n\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      const errors = error.response.data.errors;\r\n      console.log(errors);\r\n    }\r\n  };\r\n\r\n  // добавить редакс\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Registration\">\r\n      <div className=\"Registration_window\">\r\n        <h2>Registration</h2>\r\n        <form className=\"Registration_form\" onSubmit={(e) => handleSubmit(e)}>\r\n          <Input\r\n            label=\"your-name\"\r\n            labelTxt=\"Enter your name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            required={true}\r\n            placeholder=\"Your name\"\r\n            value={name}\r\n          />\r\n          <Input\r\n            label=\"email\"\r\n            labelTxt=\"Enter your email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            required={true}\r\n            placeholder=\"Your email\"\r\n            value={email}\r\n          />\r\n          <Input\r\n            label=\"password\"\r\n            labelTxt=\"Enter your password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            required={true}\r\n            value={password}\r\n          />\r\n          <Input\r\n            label=\"password2\"\r\n            labelTxt=\"Confirm your password\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            onChange={handleChange}\r\n            required={true}\r\n            value={password2}\r\n          />\r\n\r\n          <p>Fill in all the fields!</p>\r\n\r\n          <Input\r\n            disabled={isValid}\r\n            className=\"Input_submit\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nRegistration.propTypes = { isAuth: PropTypes.bool };\r\n\r\nexport default connect(mapStateToProps)(Registration);\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Navbar\\Navbar.js",["105"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\nimport blog from \"../../img/blog.svg\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/auth\";\r\n\r\nconst Nabar = ({ isAuth, loading, logout }) => {\r\n  const authLinks = (\r\n    <>\r\n      <li>\r\n        <NavLink to=\"/posts\">\r\n          <span>posts</span>\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/dashboard\">\r\n          <span>dashboard</span>\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"/\">\r\n          <span>logout</span>\r\n        </a>\r\n      </li>\r\n    </>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <>\r\n      <li>\r\n        <NavLink to=\"/registration\">\r\n          <span>registration</span>\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/login\">\r\n          <span>login</span>\r\n        </NavLink>\r\n      </li>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className=\"Nav_logo\"\r\n        exact\r\n        activeClassName=\"Nav_logo_active\"\r\n        to=\"/\"\r\n      >\r\n        <img className=\"Nav_pic\" src={blog} alt=\"logo link\" />\r\n      </NavLink>\r\n      <ul className=\"Nav_navigation\">\r\n        {!!isAuth && !loading ? authLinks : guestLinks}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nNabar.propTypes = {\r\n  isAuth: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(Nabar);\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Login\\Login.js",["106"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./Login.css\";\r\nimport Input from \"../UI/Input/Input\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../store/actions/auth\";\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const { email, password } = formData;\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    // надо добавить тут валидацию форм\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"Login_window\">\r\n        <h2>Login</h2>\r\n        <form className=\"Registration_form\" onSubmit={(e) => handleSubmit(e)}>\r\n          <Input\r\n            label=\"email\"\r\n            labelTxt=\"Enter your email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            required={true}\r\n            placeholder=\"Your email\"\r\n            value={email}\r\n          />\r\n          <Input\r\n            label=\"password\"\r\n            labelTxt=\"Enter your password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            required={true}\r\n            value={password}\r\n          />\r\n\r\n          <p>Fill in all the fields!</p>\r\n\r\n          <Input\r\n            disabled={isValid}\r\n            className=\"Input_submit\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nLogin.propTypes = {\r\n  isAuth: PropTypes.bool,\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Landing\\Landing.js",["107"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Landing = (props) => {\r\n  return <div>landing</div>;\r\n};\r\n\r\nLanding.propTypes = {};\r\n\r\nexport default Landing;\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Dashboard\\Dashboard.js",["108"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Dashboard = (props) => {\r\n  return <div>change profile</div>;\r\n};\r\n\r\nDashboard.propTypes = {};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Posts\\Posts.js",["109"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./Posts.css\";\r\nimport PostItem from \"./PostsItem\";\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts } from \"../../store/actions/posts\";\r\n\r\nconst Posts = ({ posts: { posts }, getPosts, isAuth }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <div className=\"Posts\">\r\n      <AddPostForm />\r\n      {posts.map((post) => (\r\n        <div key={post._id}>\r\n          <PostItem post={post} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.object.isRequired,\r\n  getPosts: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\index.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\auth.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\actions\\types.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\actions\\auth.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\profile.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\routing\\PrivateRoute.js",["110"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuth, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuth && !!loading ? <Redirect to=\"/login\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\reducers\\posts.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\store\\actions\\posts.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Posts\\PostsItem.js",[],"C:\\Users\\Андрей\\Desktop\\Works\\fullstack-blog\\client\\src\\components\\Posts\\AddPostForm.js",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":19,"column":19,"nodeType":"118","messageId":"119","endLine":19,"endColumn":29},{"ruleId":"116","severity":1,"message":"120","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":17,"column":19,"nodeType":"118","messageId":"119","endLine":17,"endColumn":29},{"ruleId":"116","severity":1,"message":"121","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"116","severity":1,"message":"121","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"116","severity":1,"message":"122","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":18},{"ruleId":"116","severity":1,"message":"120","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"123","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":13},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'setIsValid' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]